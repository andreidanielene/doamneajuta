//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.04.15 at 12:34:59 AM EEST 
//


package ro.bestem.doamneajuta.service.generated.nearbylocation;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for photoType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="photoType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="photo_reference" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="width" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="height" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="html_attribution" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "photoType", propOrder = {
    "photoReference",
    "width",
    "height",
    "htmlAttribution"
})
public class PhotoType
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "photo_reference", required = true)
    protected String photoReference;
    @XmlElement(required = true)
    protected String width;
    @XmlElement(required = true)
    protected String height;
    @XmlElement(name = "html_attribution", required = true)
    protected String htmlAttribution;

    /**
     * Gets the value of the photoReference property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPhotoReference() {
        return photoReference;
    }

    /**
     * Sets the value of the photoReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPhotoReference(String value) {
        this.photoReference = value;
    }

    /**
     * Gets the value of the width property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWidth() {
        return width;
    }

    /**
     * Sets the value of the width property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWidth(String value) {
        this.width = value;
    }

    /**
     * Gets the value of the height property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHeight() {
        return height;
    }

    /**
     * Sets the value of the height property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHeight(String value) {
        this.height = value;
    }

    /**
     * Gets the value of the htmlAttribution property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHtmlAttribution() {
        return htmlAttribution;
    }

    /**
     * Sets the value of the htmlAttribution property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHtmlAttribution(String value) {
        this.htmlAttribution = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PhotoType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PhotoType that = ((PhotoType) object);
        {
            String lhsPhotoReference;
            lhsPhotoReference = this.getPhotoReference();
            String rhsPhotoReference;
            rhsPhotoReference = that.getPhotoReference();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "photoReference", lhsPhotoReference), LocatorUtils.property(thatLocator, "photoReference", rhsPhotoReference), lhsPhotoReference, rhsPhotoReference)) {
                return false;
            }
        }
        {
            String lhsWidth;
            lhsWidth = this.getWidth();
            String rhsWidth;
            rhsWidth = that.getWidth();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "width", lhsWidth), LocatorUtils.property(thatLocator, "width", rhsWidth), lhsWidth, rhsWidth)) {
                return false;
            }
        }
        {
            String lhsHeight;
            lhsHeight = this.getHeight();
            String rhsHeight;
            rhsHeight = that.getHeight();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "height", lhsHeight), LocatorUtils.property(thatLocator, "height", rhsHeight), lhsHeight, rhsHeight)) {
                return false;
            }
        }
        {
            String lhsHtmlAttribution;
            lhsHtmlAttribution = this.getHtmlAttribution();
            String rhsHtmlAttribution;
            rhsHtmlAttribution = that.getHtmlAttribution();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "htmlAttribution", lhsHtmlAttribution), LocatorUtils.property(thatLocator, "htmlAttribution", rhsHtmlAttribution), lhsHtmlAttribution, rhsHtmlAttribution)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String thePhotoReference;
            thePhotoReference = this.getPhotoReference();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "photoReference", thePhotoReference), currentHashCode, thePhotoReference);
        }
        {
            String theWidth;
            theWidth = this.getWidth();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "width", theWidth), currentHashCode, theWidth);
        }
        {
            String theHeight;
            theHeight = this.getHeight();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "height", theHeight), currentHashCode, theHeight);
        }
        {
            String theHtmlAttribution;
            theHtmlAttribution = this.getHtmlAttribution();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "htmlAttribution", theHtmlAttribution), currentHashCode, theHtmlAttribution);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String thePhotoReference;
            thePhotoReference = this.getPhotoReference();
            strategy.appendField(locator, this, "photoReference", buffer, thePhotoReference);
        }
        {
            String theWidth;
            theWidth = this.getWidth();
            strategy.appendField(locator, this, "width", buffer, theWidth);
        }
        {
            String theHeight;
            theHeight = this.getHeight();
            strategy.appendField(locator, this, "height", buffer, theHeight);
        }
        {
            String theHtmlAttribution;
            theHtmlAttribution = this.getHtmlAttribution();
            strategy.appendField(locator, this, "htmlAttribution", buffer, theHtmlAttribution);
        }
        return buffer;
    }

}
