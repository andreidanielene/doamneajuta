//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.04.15 at 12:34:59 AM EEST 
//


package ro.bestem.doamneajuta.service.generated.nearbylocation;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for resultType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="resultType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="vicinity" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="geometry" type="{}geometryType"/>
 *         &lt;element name="rating" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="icon">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="https://maps.gstatic.com/mapfiles/place_api/icons/geocode-71.png"/>
 *               &lt;enumeration value="https://maps.gstatic.com/mapfiles/place_api/icons/generic_business-71.png"/>
 *               &lt;enumeration value="https://maps.gstatic.com/mapfiles/place_api/icons/lodging-71.png"/>
 *               &lt;enumeration value="https://maps.gstatic.com/mapfiles/place_api/icons/bar-71.png"/>
 *               &lt;enumeration value="https://maps.gstatic.com/mapfiles/place_api/icons/shopping-71.png"/>
 *               &lt;enumeration value="https://maps.gstatic.com/mapfiles/place_api/icons/doctor-71.png"/>
 *               &lt;enumeration value="https://maps.gstatic.com/mapfiles/place_api/icons/school-71.png"/>
 *               &lt;enumeration value="https://maps.gstatic.com/mapfiles/place_api/icons/generic_recreational-71.png"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="reference" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="opening_hours" type="{}opening_hoursType" minOccurs="0"/>
 *         &lt;element name="photo" type="{}photoType" minOccurs="0"/>
 *         &lt;element name="place_id" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="scope" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "resultType", propOrder = {
    "name",
    "vicinity",
    "type",
    "geometry",
    "rating",
    "icon",
    "reference",
    "id",
    "openingHours",
    "photo",
    "placeId",
    "scope"
})
public class ResultType
    implements Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected String name;
    @XmlElement(required = true)
    protected String vicinity;
    protected List<String> type;
    @XmlElement(required = true)
    protected GeometryType geometry;
    protected String rating;
    @XmlElement(required = true)
    protected String icon;
    @XmlElement(required = true)
    protected String reference;
    @XmlElement(required = true)
    protected String id;
    @XmlElement(name = "opening_hours")
    protected OpeningHoursType openingHours;
    protected PhotoType photo;
    @XmlElement(name = "place_id", required = true)
    protected String placeId;
    @XmlElement(required = true)
    protected String scope;

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the vicinity property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVicinity() {
        return vicinity;
    }

    /**
     * Sets the value of the vicinity property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVicinity(String value) {
        this.vicinity = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the type property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getType() {
        if (type == null) {
            type = new ArrayList<String>();
        }
        return this.type;
    }

    /**
     * Gets the value of the geometry property.
     * 
     * @return
     *     possible object is
     *     {@link GeometryType }
     *     
     */
    public GeometryType getGeometry() {
        return geometry;
    }

    /**
     * Sets the value of the geometry property.
     * 
     * @param value
     *     allowed object is
     *     {@link GeometryType }
     *     
     */
    public void setGeometry(GeometryType value) {
        this.geometry = value;
    }

    /**
     * Gets the value of the rating property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRating() {
        return rating;
    }

    /**
     * Sets the value of the rating property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRating(String value) {
        this.rating = value;
    }

    /**
     * Gets the value of the icon property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIcon() {
        return icon;
    }

    /**
     * Sets the value of the icon property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIcon(String value) {
        this.icon = value;
    }

    /**
     * Gets the value of the reference property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReference() {
        return reference;
    }

    /**
     * Sets the value of the reference property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReference(String value) {
        this.reference = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the openingHours property.
     * 
     * @return
     *     possible object is
     *     {@link OpeningHoursType }
     *     
     */
    public OpeningHoursType getOpeningHours() {
        return openingHours;
    }

    /**
     * Sets the value of the openingHours property.
     * 
     * @param value
     *     allowed object is
     *     {@link OpeningHoursType }
     *     
     */
    public void setOpeningHours(OpeningHoursType value) {
        this.openingHours = value;
    }

    /**
     * Gets the value of the photo property.
     * 
     * @return
     *     possible object is
     *     {@link PhotoType }
     *     
     */
    public PhotoType getPhoto() {
        return photo;
    }

    /**
     * Sets the value of the photo property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhotoType }
     *     
     */
    public void setPhoto(PhotoType value) {
        this.photo = value;
    }

    /**
     * Gets the value of the placeId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPlaceId() {
        return placeId;
    }

    /**
     * Sets the value of the placeId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPlaceId(String value) {
        this.placeId = value;
    }

    /**
     * Gets the value of the scope property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getScope() {
        return scope;
    }

    /**
     * Sets the value of the scope property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setScope(String value) {
        this.scope = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ResultType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ResultType that = ((ResultType) object);
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            String lhsVicinity;
            lhsVicinity = this.getVicinity();
            String rhsVicinity;
            rhsVicinity = that.getVicinity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vicinity", lhsVicinity), LocatorUtils.property(thatLocator, "vicinity", rhsVicinity), lhsVicinity, rhsVicinity)) {
                return false;
            }
        }
        {
            List<String> lhsType;
            lhsType = (((this.type!= null)&&(!this.type.isEmpty()))?this.getType():null);
            List<String> rhsType;
            rhsType = (((that.type!= null)&&(!that.type.isEmpty()))?that.getType():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            GeometryType lhsGeometry;
            lhsGeometry = this.getGeometry();
            GeometryType rhsGeometry;
            rhsGeometry = that.getGeometry();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geometry", lhsGeometry), LocatorUtils.property(thatLocator, "geometry", rhsGeometry), lhsGeometry, rhsGeometry)) {
                return false;
            }
        }
        {
            String lhsRating;
            lhsRating = this.getRating();
            String rhsRating;
            rhsRating = that.getRating();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rating", lhsRating), LocatorUtils.property(thatLocator, "rating", rhsRating), lhsRating, rhsRating)) {
                return false;
            }
        }
        {
            String lhsIcon;
            lhsIcon = this.getIcon();
            String rhsIcon;
            rhsIcon = that.getIcon();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "icon", lhsIcon), LocatorUtils.property(thatLocator, "icon", rhsIcon), lhsIcon, rhsIcon)) {
                return false;
            }
        }
        {
            String lhsReference;
            lhsReference = this.getReference();
            String rhsReference;
            rhsReference = that.getReference();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reference", lhsReference), LocatorUtils.property(thatLocator, "reference", rhsReference), lhsReference, rhsReference)) {
                return false;
            }
        }
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            OpeningHoursType lhsOpeningHours;
            lhsOpeningHours = this.getOpeningHours();
            OpeningHoursType rhsOpeningHours;
            rhsOpeningHours = that.getOpeningHours();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "openingHours", lhsOpeningHours), LocatorUtils.property(thatLocator, "openingHours", rhsOpeningHours), lhsOpeningHours, rhsOpeningHours)) {
                return false;
            }
        }
        {
            PhotoType lhsPhoto;
            lhsPhoto = this.getPhoto();
            PhotoType rhsPhoto;
            rhsPhoto = that.getPhoto();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "photo", lhsPhoto), LocatorUtils.property(thatLocator, "photo", rhsPhoto), lhsPhoto, rhsPhoto)) {
                return false;
            }
        }
        {
            String lhsPlaceId;
            lhsPlaceId = this.getPlaceId();
            String rhsPlaceId;
            rhsPlaceId = that.getPlaceId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "placeId", lhsPlaceId), LocatorUtils.property(thatLocator, "placeId", rhsPlaceId), lhsPlaceId, rhsPlaceId)) {
                return false;
            }
        }
        {
            String lhsScope;
            lhsScope = this.getScope();
            String rhsScope;
            rhsScope = that.getScope();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "scope", lhsScope), LocatorUtils.property(thatLocator, "scope", rhsScope), lhsScope, rhsScope)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            String theVicinity;
            theVicinity = this.getVicinity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vicinity", theVicinity), currentHashCode, theVicinity);
        }
        {
            List<String> theType;
            theType = (((this.type!= null)&&(!this.type.isEmpty()))?this.getType():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            GeometryType theGeometry;
            theGeometry = this.getGeometry();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geometry", theGeometry), currentHashCode, theGeometry);
        }
        {
            String theRating;
            theRating = this.getRating();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rating", theRating), currentHashCode, theRating);
        }
        {
            String theIcon;
            theIcon = this.getIcon();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "icon", theIcon), currentHashCode, theIcon);
        }
        {
            String theReference;
            theReference = this.getReference();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reference", theReference), currentHashCode, theReference);
        }
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            OpeningHoursType theOpeningHours;
            theOpeningHours = this.getOpeningHours();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "openingHours", theOpeningHours), currentHashCode, theOpeningHours);
        }
        {
            PhotoType thePhoto;
            thePhoto = this.getPhoto();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "photo", thePhoto), currentHashCode, thePhoto);
        }
        {
            String thePlaceId;
            thePlaceId = this.getPlaceId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "placeId", thePlaceId), currentHashCode, thePlaceId);
        }
        {
            String theScope;
            theScope = this.getScope();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "scope", theScope), currentHashCode, theScope);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        {
            String theVicinity;
            theVicinity = this.getVicinity();
            strategy.appendField(locator, this, "vicinity", buffer, theVicinity);
        }
        {
            List<String> theType;
            theType = (((this.type!= null)&&(!this.type.isEmpty()))?this.getType():null);
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        {
            GeometryType theGeometry;
            theGeometry = this.getGeometry();
            strategy.appendField(locator, this, "geometry", buffer, theGeometry);
        }
        {
            String theRating;
            theRating = this.getRating();
            strategy.appendField(locator, this, "rating", buffer, theRating);
        }
        {
            String theIcon;
            theIcon = this.getIcon();
            strategy.appendField(locator, this, "icon", buffer, theIcon);
        }
        {
            String theReference;
            theReference = this.getReference();
            strategy.appendField(locator, this, "reference", buffer, theReference);
        }
        {
            String theId;
            theId = this.getId();
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        {
            OpeningHoursType theOpeningHours;
            theOpeningHours = this.getOpeningHours();
            strategy.appendField(locator, this, "openingHours", buffer, theOpeningHours);
        }
        {
            PhotoType thePhoto;
            thePhoto = this.getPhoto();
            strategy.appendField(locator, this, "photo", buffer, thePhoto);
        }
        {
            String thePlaceId;
            thePlaceId = this.getPlaceId();
            strategy.appendField(locator, this, "placeId", buffer, thePlaceId);
        }
        {
            String theScope;
            theScope = this.getScope();
            strategy.appendField(locator, this, "scope", buffer, theScope);
        }
        return buffer;
    }

}
